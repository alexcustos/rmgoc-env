# /etc/nginx/conf.d/git.example.com.ssl.conf

# Сокет сервиса fcgiwrap, должен быть доступен на запись пользователю nginx:nginx.
upstream fastcgi-server {
	server unix:/run/fcgiwrap.sock-1;
}

ldap_server ldap_git_users {
	# ldap[s]://hostname:port/base_dn?attributes?scope?filter
	url "ldap://127.0.0.1:389/ou=people,dc=example,dc=com?uid?sub?(objectClass=person)";
	# DN с ограниченными правами.
	binddn "cn=manager,dc=example,dc=com";
	binddn_passwd passwd;
	# Поиск пользователей непосредственно в группе без использования memberOf оверлея.
	group_attribute uniqueMember;
	# Атрибут должен содержать полный DN участника группы.
	group_attribute_is_dn on;
	# satisfy any;
	require group "cn=developers,ou=groups,dc=example,dc=com";
}

# Связь репозитория с пользователем в LDAP.
# $repo - репозиторий полученный из URL в location; $repo_login - авторизованный пользователь.
map $repo $repo_login {
	default "";
	# Можно разрешить доступ одному пользователю к нескольким репозиториям.
	"example.com" "example";
}

# Редирект на HTTPS
server {
	listen [ВНЕШНИЙ_IP]:80;

	server_name git.example.com;
	return 301 https://git.example.com$request_uri;
}

# HTTPS
server {
	listen [ВНЕШНИЙ_IP]:443 ssl;

	add_header Strict-Transport-Security max-age=2592000;

	server_name git.example.com;
	charset utf-8;

	ssl_certificate /etc/ssl/nginx/git.example.com.pem;
	ssl_certificate_key /etc/ssl/nginx/git.example.com.key;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

	access_log /var/log/nginx/nginx_git.example.com-ssl_access_log main;
	error_log /var/log/nginx/nginx_git.example.com-ssl_error_log info;

	# Директория по умолчанию для аутентифицированных пользователей.
	# Если пользователь не авторизован для доступа в репозиторий, в этой папке он и останется.
	root /var/git/empty;

	# Статичные файлы Git репозитория.
	location ~ "^/(?<repo>[^/]+)/objects/([0-9a-f]{2}/[0-9a-f]{38}|pack/pack-[0-9a-f]{40}\.(pack|idx))$" {
		auth_ldap "git::repository";
		auth_ldap_servers ldap_git_users;
		# значение переменной $repo_login получается сопоставлением в map переменной $repo
		if ($remote_user = $repo_login) {
			root /var/git;
		}
	}

	# Запросы к репозиторию, которые необходимо направить на git-http-backend.
	location ~ "^/(?<repo>[^/]+)/(HEAD|info/refs|objects/info/[^/]+|git-(upload|receive)-pack)$" {
		auth_ldap "git::repository";
		auth_ldap_servers ldap_git_users;

		fastcgi_param SCRIPT_FILENAME /usr/libexec/git-core/git-http-backend;
		fastcgi_param PATH_INFO $uri;
		fastcgi_param GIT_HTTP_EXPORT_ALL "";
		fastcgi_param GIT_PROJECT_ROOT /var/git;
		fastcgi_param REMOTE_USER $remote_user;
		include fastcgi_params;

		if ($remote_user = $repo_login) {
			fastcgi_pass fastcgi-server;
		}
	}

	# Если репозиторий не найден вернуть 404.
	location / {
		return 404;
	}
}
